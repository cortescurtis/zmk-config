/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>

#define ISRT 0
#define SYMNUM  1
#define FUNCNAV 2
#define QWERTY  3

/ {
    behaviors {
      skq: sticky_key_quick_release {
        compatible = "zmk,behavior-sticky-key";
        label = "STICKY_KEY_QUICK_RELEASE";
        #binding-cells = <1>;
        bindings = <&kp>;
        release-after-ms = <1000>;
        quick-release;
      };
    };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4    |   5  |                  |  6   |  7    |  8    |  9   |   0   |   -   |
// |SFT_TAB|  Y  |  C  |  L   |  M    |   K  |                  |  Z   |  F    |  U    |  ,   |   '   |   \   |
// |  TAB  |CTL-I|OPT-S|SFT-R | CMD-T |   G  |                  |  P   | CMD-N | SFT-E |OPT-A | CTL-O |   ;   |
// |   `   |  Q  |  V  |  W   |  D    |   J  |  TO0  |  | TO3   |  B   |  H    |  /    |  .   |   X   |   :   |
//                     | BSPC |  GUI  | SPC  | SL 2  |  | SL 1  | ENT  |WRD_SFT|  DEL  |
			bindings = <
&kp ESC        &kp N1       &kp N2      &kp N3      &kp N4        &kp N5                               &kp N6   &kp N7        &kp N8      &kp N9      &kp N0       &kp MINUS
&kp LS(TAB)    &kp Y        &kp C       &kp L       &kp M         &kp K                                &kp Z    &kp F         &kp U       &kp COMMA   &kp APOS     &kp BSLH
&kp TAB        &mt LCTRL I  &mt LALT S  &mt LGUI R  &mt LSHIFT T  &kp G                                &kp P    &mt RSHIFT N  &mt RGUI E  &mt RALT A  &mt RCTRL O  &kp SEMI
&kp GRAVE      &kp Q        &kp V       &kp W       &kp D         &kp J      &tog ISRT    &tog QWERTY  &kp B    &kp H         &kp FSLH    &kp DOT     &kp X        &kp COLON
                                        &kp BSPC    &sk LGUI      &kp SPACE  &sl FUNCNAV  &sl SYMNUM   &kp RET  &caps_word    &kp DEL
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		symb_layer {
// --------------------------------------------------------------------------------------------------------------------
// | TRANS |  1  |  2  |   3   |   4   |   5   |                       |   6   |   7   |   8   |   9  |   0   |   -   |
// | TRANS |  !  |  @  |   #   |   $   |   %   |        	    	   |   ,   |  N7   |  N8   |  N9  |   +   |   /   |
// |   ^   |  <  |  [  |   {   |   (   |   &   |          	           |   .   |  N4   |  N5   |  N6  |   =   |   *   |
// |   ~   |  >  |  ]  |   }   |   )   |  "|"  |   TRANS  |  |   TRANS |   N0  |  N1   |  N2   |  N3  |   -   |   _   |
//                     | TRANS | TRANS |  TAB  |   TRANS  |  |   TRANS | TRANS | TRANS | TRANS |
			bindings = <
&trans     &kp N1      &kp N2      &kp N3      &kp N4      &kp N5                          &kp N6          &kp N7      &kp N8      &kp N9      &kp N0      &trans
&trans     &kp EXCL    &kp AT      &kp HASH    &kp DLLR    &kp PRCNT                       &kp COMMA       &kp KP_N7   &kp KP_N8   &kp KP_N9   &kp PLUS    &kp BSLH
&kp CARET  &kp LT      &kp LBKT    &kp LBRC    &kp LPAR    &kp AMPS                        &kp KP_DOT      &kp KP_N4   &kp KP_N5   &kp KP_N6   &kp EQUAL   &kp ASTRK
&kp TILDE  &kp GT      &kp RBKT    &kp RBRC    &kp RPAR    &kp PIPE    &trans      &trans  &kp KP_N0       &kp KP_N1   &kp KP_N2   &kp KP_N3   &kp MINUS   &kp UNDER
                                   &trans      &trans      &kp TAB     &trans      &trans  &trans          &trans      &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		function_navigation_layer {
// ------------------------------------------------------------------------------------------------------------
// | TRANS  |   F1  |  F2   |  F3     |  F4    |  F5    |                  |  F6    |  F7    |  F8    | F9     | F10      | F11  |
// | TRANS  | BT 0  | BT 1  | BT 2    | BT 3   | BT 4   |                  | HOME   | PGDN   | PGUP   | END    | INS      | F12  |
// | TRANS  | RSG_5 | RSG_4 | RSG_SPC | SCR_UP | SCR_DN |                  | LEFT   |  DOWN  |   UP   | RIGHT  | VOL_MUTE | META |
// | BT CLR | CMD_Z | CMD_X | CMD_C   | CMD_V  | CMD_B  |  TO0  |  |   TO3 | C_PREV |  PlPa  | C_NEXT | VOL_UP | VOL_DN   | HYPR |
//                          | TRANS   | TRANS  | TRANS  |  SL 2 |  | TRANS | TRANS   | TRANS | TRANS  |
			bindings = <
&trans      &kp F1            &kp F2            &kp F3               &kp F4        &kp F5                        &kp F6      &kp F7     &kp F8      &kp F9        &kp F10       &kp F11
&trans      &bt BT_SEL 0      &bt BT_SEL 1      &bt BT_SEL 2         &bt BT_SEL 3  &bt BT_SEL 4                  &kp PG_UP   &kp PG_DN  &kp HOME    &kp END       &kp C_VOL_UP  &kp F12
&trans      &kp LS(LG(N5))    &kp LS(LG(N4))    &kp LS(LG(SPACE))    &kp C_BRI_UP  &kp C_BRI_DN                  &kp LEFT    &kp DOWN   &kp UP      &kp RIGHT     &kp C_MUTE    &sk LMETA
&bt BT_CLR  &kp LG(Z)         &kp LG(X)         &kp LG(C)            &kp LG(V)     &kp LG(B)     &trans  &trans  &kp C_PREV  &kp C_PP   &kp C_NEXT  &kp C_VOL_UP  &kp C_VOL_DN  &sk RMETA
                                                &trans               &trans        &trans        &trans  &trans  &trans      &trans     &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;

		};

		qwerty_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |   4   |  5   |                  |  6   |  7    |  8    |  9   |   0   |   -   |
// | SF_TAB|  Q  |  W  |  E   |   R   |  T   |                  |  Y   |  U    |  I    |  O   |   P   |   \   |
// |  TAB  |  A  |  S  |  D   |   F   |  G   |                  |  H   |  J    |  K    |  L   |   ;   |   '   |
// |   `   |  Z  |  X  |  C   |   V   |  B   |  TO0  |  | TO3   |  N   |  M    |  ,    |  .   |   /   |  "|"  |
//                     | BSPC |  GUI  | SPC  | SL 2  |  | SL 1  | RET  |WRD_SFT|  DEL  |
			bindings = <r b
&kp ESC      &kp N1       &kp N2      &kp N3      &kp N4       &kp N5                           &kp N6  &kp N7       &kp N8      &kp N9      &kp N0          &kp MINUS
&kp LS(TAB)  &kp Q        &kp W       &kp E       &kp R        &kp T                            &kp Y   &kp U        &kp I       &kp O       &kp P           &kp BSLH
&kp TAB      &mt LCTRL A  &mt LALT S  &mt LGUI D  &mt LSHFT F  &kp G                            &kp H   &mt RSHFT J  &mt RGUI K  &mt RALT L  &mt RCTRL SEMI  &kp SQT
&kp GRAVE    &kp Z        &kp X       &kp C       &kp V        &kp B   &trans       &trans  	   &kp N   &kp M        &kp COMMA   &kp DOT     &kp FSLH        &kp PIPE
									  &trans      &trans       &trans  &sl FUNCNAV  &sl SYMNUM  &trans  &trans       &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
	};
};