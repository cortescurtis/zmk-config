/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define ISRT 0
#define SYMNUM  1
#define FUNCNAV 2
#define QWERTY  3

/ {
    behaviors {
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
        };
        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4    |   5  |                  |  6   |  7    |  8    |  9   |   0   |   -   |
            // |SFT_TAB|  Y  |  C  |  L   |  M    |   K  |                  |  Z   |  F    |  U    |  ,   |   '   |   \   |
            // |  TAB  |CTL-I|OPT-S|SFT-R | CMD-T |   G  |                  |  P   | CMD-N | SFT-E |OPT-A | CTL-O |   ;   |
            // |   `   |  Q  |  V  |  W   |  D    |   J  |  TO0  |  | TO3   |  B   |  H    |  /    |  .   |   X   |   :   |
            //                     |WRD_SH|  GUI  | SPC  | SL 2  |  | SL 1  | ENT  | BSPC  |  DEL  |

            bindings = <
&kp ESC           &gqt EXCL N1  &gqt AT N2    &gqt HASH N3    &gqt DOLLAR N4  &gqt PERCENT N5                             &gqt CARET N6  &gqt AMPS N7  &gqt ASTRK N8    &gqt MINUS N9             &gqt UNDER N0            &gqt DEL BACKSPACE
&gqt TILDE GRAVE  &gqt LS(Y) Y  &gqt LS(C) C  &gqt LS(L) L    &gqt LS(M) M    &gqt LS(K) K                                &gqt LS(Z) Z   &gqt LS(F) F  &gqt LS(U) U     &gqt LESS_THAN COMMA      &gqt DOUBLE_QUOTES APOS  &gqt PIPE BSLH
&gqt LS(TAB) TAB  &gqt LS(I) I  &gqt LS(S) S  &gqt LS(R) R    &gqt LS(T) T    &gqt LS(G) G                                &gqt LS(P) P   &gqt LS(N) N  &gqt LS(E) E     &gqt LS(A) A              &gqt LS(O) O             &gqt COLON SEMICOLON
&sk LCTRL         &gqt LS(Q) Q  &gqt LS(V) V  &gqt LS(W) W    &gqt LS(D) D    &gqt LS(J) J     &sk LGUI       &sk RSHFT   &gqt LS(B) B   &gqt LS(H) H  &gqt QMARK FSLH  &gqt GREATER_THAN PERIOD  &gqt LS(X) X             &sk RALT
                                              &kp DOWN_ARROW  &sk UP_ARROW    &kp SPACE        &sl FUNCNAV    &sl SYMNUM  &kp RET        &kp LEFT      &kp RIGHT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        symb_layer {
            // --------------------------------------------------------------------------------------------------------------------
            // | TRANS |  1  |  2  |   3   |   4   |   5   |                       |   6   |   7   |   8   |   9  |   0   |   -   |
            // | TRANS |  !  |  @  |   #   |   $   |   %   |        	    	       |   ,   |  N7   |  N8   |  N9  |   +   |   /   |
            // |   ^   |  <  |  [  |   {   |   (   |   &   |          	           |   .   |  N4   |  N5   |  N6  |   =   |   *   |
            // |   ~   |  >  |  ]  |   }   |   )   |  "|"  |   TRANS  |  |   TRANS |   N0  |  N1   |  N2   |  N3  |   -   |   _   |
            //                     | TRANS | TRANS |  TAB  |   TRANS  |  |   TRANS | TRANS | TRANS | TRANS |

            bindings = <
&trans  &kp F1         &kp F2            &kp F3                &kp F4             &kp F5                            &kp F6      &kp F7     &kp F8     &kp F9     &kp F10    &kp F11
&trans  &kp EXCL       &kp PIPE          &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp PRCNT                         &kp COMMA   &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp PLUS   &kp F12
&trans  &kp SEMICOLON  &kp AMPERSAND     &kp LBRC              &kp RIGHT_BRACE    &kp COLON                         &kp KP_DOT  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp EQUAL  &kp ASTRK
&trans  &kp LESS_THAN  &kp GREATER_THAN  &kp LEFT_PARENTHESIS  &kp RPAR           &kp UNDERSCORE  &trans    &trans  &kp KP_N0   &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp MINUS  &trans
                                         &trans                &trans             &trans          &trans    &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        function_navigation_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | TRANS  |   F1  |  F2   |  F3     |  F4    |  F5    |                  |  F6    |  F7    |  F8    | F9     | F10      | F11  |
            // | TRANS  | BT 0  | BT 1  | BT 2    | BT 3   | BT 4   |                  | HOME   | PGDN   | PGUP   | END    | INS      | F12  |
            // | TRANS  | RSG_5 | RSG_4 | RSG_SPC | SCR_UP | SCR_DN |                  | LEFT   |  DOWN  |   UP   | RIGHT  | VOL_MUTE | META |
            // | BT CLR | CMD_Z | CMD_X | CMD_C   | CMD_V  | CMD_B  |  TO0  |  |   TO3 | C_PREV |  PlPa  | C_NEXT | VOL_DN | VOL_UP   | HYPR |
            //                          | TRANS   | TRANS  | TRANS  |  SL 2 |  | TRANS | TRANS   | TRANS | TRANS  |

            bindings = <
&trans      &kp F1          &kp F2          &kp F3             &kp F4        &kp F5                                 &kp F6      &kp F7     &kp F8       &kp F9        &kp F10       &kp F11
&trans      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4                           &kp HOME    &kp PG_DN  &kp PAGE_UP  &kp END       &kp C_VOL_UP  &kp F12
&trans      &kp LS(LG(N5))  &kp LS(LG(N4))  &kp LS(LG(SPACE))  &kp C_BRI_UP  &kp C_BRI_DN                           &kp LEFT    &kp DOWN   &kp UP       &kp RIGHT     &kp C_MUTE    &to 0
&bt BT_CLR  &kp LG(Z)       &kp LG(X)       &kp LG(C)          &kp LG(V)     &kp LG(B)     &kp LG(SPACE)    &trans  &kp C_PREV  &kp C_PP   &kp C_NEXT   &kp C_VOL_DN  &kp C_VOL_UP  &sk RMETA
                                            &trans             &trans        &trans        &trans           &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        qwerty_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |   4   |  5   |                  |  6   |  7    |  8    |  9   |   0   |   -   |
            // | SF_TAB|  Q  |  W  |  E   |   R   |  T   |                  |  Y   |  U    |  I    |  O   |   P   |   \   |
            // |  TAB  |  A  |  S  |  D   |   F   |  G   |                  |  H   |  J    |  K    |  L   |   ;   |   '   |
            // |   `   |  Z  |  X  |  C   |   V   |  B   |  TO0  |  | TO3   |  N   |  M    |  ,    |  .   |   /   |  "|"  |
            //                     | BSPC |  GUI  | SPC  | SL 2  |  | SL 1  | RET  |WRD_SFT|  DEL  |

            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3    &kp N4  &kp N5                                     &kp N6   &kp N7    &kp N8     &kp N9   &kp N0    &kp BACKSPACE
&kp GRAVE  &kp Q   &kp W   &kp E     &kp R   &kp T                                      &kp Y    &kp U     &kp I      &kp O    &kp P     &kp BSLH
&kp TAB    &kp A   &kp S   &kp D     &kp F   &kp G                                      &kp H    &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z   &kp X   &kp C     &kp V   &kp B      &kp LEFT_GUI       &kp RSHFT    &kp N    &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RALT
                           &kp DOWN  &kp UP  &kp SPACE  &lt 2 PAGE_DOWN    &lt 1 PG_UP  &kp RET  &kp LEFT  &kp RIGHT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
